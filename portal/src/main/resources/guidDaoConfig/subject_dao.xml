<?xml version="1.0"?>
<queries>
	<query>
		<!-- **** modified query to include creator_user_id -->
		<name> create 
		</name>
		<sql> INSERT INTO subject (subject_id, guid, subject_type, hashcode1, hashcode2, hashcode3, status, creator_id, creator_user_id, date_created) VALUES (?,?,?,?,?,?,?,?,?,current_timestamp) 
		</sql>
	</query>
	<!-- This query was used by findAll() method, which was used by get(). It's now replaced by the findByHashCode query. <query> <name>findAll</name> <sql>SELECT * FROM subject</sql> </query> -->
	<query>
		<name> findByGuid 
		</name>
		<sql> SELECT * FROM subject WHERE guid=? 
		</sql>
	</query>
	<query>
		<name> findById 
		</name>
		<sql> SELECT * FROM subject WHERE subject_id=? 
		</sql>
	</query>
	<!-- changed sql for oracle sequence: SELECT nextval('subject_subject_id_seq') from dual -->
	<query>
		<name> nextSubjectId 
		</name>
		<sql> SELECT nextval('subject_seq') 
		</sql>
	</query>
	<!-- modified query to include updater_sub_user_id -->
	<query>
		<name> update 
		</name>
		<sql> UPDATE subject SET subject_type=?, hashcode1=?, hashcode2=?, hashcode3=?, status=?, updater_id=?, updater_user_id=?, date_updated=current_timestamp WHERE subject_id=? 
		</sql>
	</query>
	<!-- query to modify the updater id and date for chain merge -->
	<query>
		<name> modifyUpdaterId 
		</name>
		<sql> UPDATE subject SET updater_id=?, updater_user_id=?, date_updated=current_timestamp WHERE subject_id=? 
		</sql>
	</query>
	<!-- commented out this query since it's not being used currently. If there is a need for this query a similar query "findByGuidCreatorIdAndSubUserId" should be used instead because it finds record by an additional field subUserId. <query> <name>findByGuidAndCreatorId</name> <sql>SELECT * from subject where guid=? AND creator_id=?</sql> </query> -->
	<!-- added query to find entries that have the specified guid, creator_id & creator_sub_user_id -->
	<query>
		<name> findByGuidCreatorIdAndUserId 
		</name>
		<sql> SELECT * from subject where guid=? AND creator_id=? AND creator_user_id=? 
		</sql>
	</query>
	<!-- Modified query to include creator_user_id -->
	<query>
		<name> findByHashCodesAndOwnerId 
		</name>
		<sql> SELECT * FROM subject WHERE hashcode1=? AND hashcode2=? AND hashcode3=? AND creator_id=? AND creator_user_id=? 
		</sql>
	</query>
	<!-- modified to remove hashcode4 and hashcode5 -->
	<query>
		<name> findByHashCode 
		</name>
		<sql> SELECT * FROM subject WHERE hashcode1=? OR hashcode2=? OR hashcode3=? 
		</sql>
	</query>
	<!-- added for merge - find subjects by guid where guid is not merged AND list of subjects that are referring to subjects with this given GUID -->
	<query>
		<name> findByGuidForDirectIndirectMatch 
		</name>
		<sql> select * from subject where guid=? and status=2 UNION select * from subject where subject_id in(select subject_merging_map.REFERRING_SUBJECT_ID from subject, subject_merging_map where subject.guid=? and subject.SUBJECT_ID=subject_merging_map.REFERRED_SUBJECT_ID) 
		</sql>
	</query>
	<query>
		<name> containsGuid 
		</name>
		<sql> SELECT * FROM subject WHERE guid like ? 
		</sql>
	</query>
</queries>