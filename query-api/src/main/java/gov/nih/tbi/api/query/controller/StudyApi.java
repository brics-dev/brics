/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package gov.nih.tbi.api.query.controller;

import java.util.List;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import gov.nih.tbi.api.query.model.FormStudy;
import gov.nih.tbi.api.query.model.Study;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.Authorization;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-03-16T09:57:35.865-04:00[America/New_York]")
@Api(value = "study", description = "the study API")
public interface StudyApi {

    @ApiOperation(value = "Get studies", nickname = "getStudies", notes = "Returns all of the studies the authorized user has access to.  Optionally, adding the prefixed ID to the query parameter will only return data for the given studies.", response = Study.class, responseContainer = "List", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "Study", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Study.class, responseContainer = "List"),
        @ApiResponse(code = 401, message = "JWT is missing or invalid") })
    @RequestMapping(value = "/study",
        produces = "application/json", 
        method = RequestMethod.GET)
    ResponseEntity<List<Study>> getStudies(@ApiParam(value = "Study prefixed ID(s) to return data for.") @Valid @RequestParam(value = "prefixedId", required = false) List<String> prefixedId);


    @ApiOperation(value = "Find studies by form structure short name(s)", nickname = "getStudyByFormName", notes = "This service return studies that are associated with the given form structure(s).", response = FormStudy.class, responseContainer = "List", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "Study", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = FormStudy.class, responseContainer = "List"),
        @ApiResponse(code = 401, message = "JWT is missing or invalid"),
        @ApiResponse(code = 404, message = "The specified resource was not found") })
    @RequestMapping(value = "/study/form",
        produces = "application/json", 
        method = RequestMethod.GET)
    ResponseEntity<List<FormStudy>> getStudyByFormName(@NotNull @Size(min=1) @ApiParam(value = "Form short name to return associated studies for.", required = true) @Valid @RequestParam(value = "formName", required = true) List<String> formName);

}
