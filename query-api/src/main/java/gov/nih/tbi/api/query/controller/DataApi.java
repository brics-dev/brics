/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package gov.nih.tbi.api.query.controller;

import java.io.File;

import javax.validation.Valid;

import org.springframework.core.io.Resource;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import gov.nih.tbi.api.query.model.FormDataParam;
import gov.nih.tbi.api.query.model.SimpleDataParam;
import gov.nih.tbi.api.query.model.StudyDataParam;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.Authorization;


@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-02-19T11:05:24.685-05:00[America/New_York]")
@Api(value = "data", description = "the data API")
public interface DataApi {

    @ApiOperation(value = "Get data from multiple form structures", nickname = "bulkSingleForm", notes = "This service returns data for multiple form structure without doing joins, could also include study association if required.", response = File.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "Data", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Zip archive containing all data that was requested.", response = File.class),
        @ApiResponse(code = 401, message = "JWT is missing or invalid") })
    @RequestMapping(value = "/data/bulk/form/study",
        produces = "application/zip", 
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<Resource> bulkSingleForm(@ApiParam(value = ""  )  @Valid @RequestBody SimpleDataParam body);


    @ApiOperation(value = "Get data from multiple form structures for the given studies", nickname = "bulkStudySingleForm", notes = "This service returns data for multiple form structure to study associations, without doing joins.", response = File.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "Data", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Zip archive containing all data that was requested.", response = File.class),
        @ApiResponse(code = 401, message = "JWT is missing or invalid") })
    @RequestMapping(value = "/data/bulk/study/form",
        produces = "application/zip", 
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<Resource> bulkStudySingleForm(@ApiParam(value = ""  )  @Valid @RequestBody StudyDataParam body);


    @ApiOperation(value = "Get data from a single form or up two five forms joined by GUID", nickname = "getInstancedDataCsv", notes = "This service returns data for a single form structure.  If multiple forms (up to five) are specified it will join the data by GUID.", response = File.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "Data", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Zip archive containing all data that was requested.", response = File.class),
        @ApiResponse(code = 401, message = "JWT is missing or invalid") })
    @RequestMapping(value = "/data/csv",
        produces = "application/csv", 
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<Resource> getInstancedDataCsv(@ApiParam(value = ""  )  @Valid @RequestBody FormDataParam body);


    @ApiOperation(value = "Get data from a single form or up two five forms joined by GUID", nickname = "getInstancedDataJson", notes = "This service returns data for a single form structure.  If multiple forms (up to five) are specified it will join the data by GUID.", response = File.class, authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "Data", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Zip archive containing all data that was requested.", response = File.class),
        @ApiResponse(code = 401, message = "JWT is missing or invalid") })
    @RequestMapping(value = "/data/json",
        produces = "application/json", 
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<Resource> getInstancedDataJson(@ApiParam(value = ""  )  @Valid @RequestBody FormDataParam body);

}
