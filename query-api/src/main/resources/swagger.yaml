openapi: "3.0.0"
info:
  description: "This is an API to access data from query tool."
  version: "1.0.0"
  title: "Query Tool API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "fchen@sapient.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: "http://localhost:8083"
tags:
  - name: "Study"
    description: "Get studies"
  - name: "Form Structure"
    description: "Get form structures"
  - name: "Data Element"
    description: "Get data elements"
  - name: "Data"
    description: "Get data"
paths:
  /study:
    get:
      tags:
      - "Study"
      summary: "Get studies"
      description: "Returns all of the studies the authorized user has access to.  Optionally, adding the prefixed ID to the query parameter will only return data for the given studies."
      operationId: "getStudies"
      parameters:
      - name: "prefixedId"
        in: "query"
        description: "Study prefixed ID(s) to return data for."
        required: false
        schema:
          type: array
          items:
            type: string
          minItems: 0
        style: form
        explode: true
      responses:
        200:
            description: "successful operation"
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Study"
        401:
          $ref: "#/components/responses/UnauthorizedError"
      security:
      - Bearer: []
  /study/form:
    get:
      tags:
      - "Study"
      summary: "Find studies by form structure short name(s)"
      description: "This service return studies that are associated with the given form structure(s)."
      operationId: "getStudyByFormName"
      parameters:
      - name: "formName"
        in: "query"
        description: "Form short name to return associated studies for."
        required: true
        schema:
          type: array
          items:
            type: string
          minItems: 1
        style: form
        explode: true
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FormStudy"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        404:
          $ref: "#/components/responses/NotFoundError"
      security:
      - Bearer: []
  /form/study:
    get:
      tags:
      - "Form Structure"
      summary: "Find form structures by study prefixed ID"
      description: "This service return form structures that are associated with the given study prefixed ID(s)."
      operationId: "getFormByStudyPrefixedId"
      parameters:
      - name: "prefixedId"
        in: "query"
        description: "Study prefixed ID(s) to return associated form structures for."
        required: true
        schema:
          type: array
          items:
            type: string
          minItems: 1
        style: form
        explode: true
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StudyForm"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        404:
          $ref: "#/components/responses/NotFoundError"
      security:
      - Bearer: []
  /dataElement/form/{formName}:
    get:
      tags:
      - "Data Element"
      summary: "Find data elements by form structure short name"
      description: "This service return data elements that are associated with the given form structure."
      operationId: "getDataElementsByFormName"
      parameters:
      - name: "formName"
        in: "path"
        description: "Form short name to return associated studies for."
        required: true
        schema:
          type: string
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RepeatableGroup"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        404:
          $ref: "#/components/responses/NotFoundError"
      security:
      - Bearer: []
  /data/bulk/study/form:
    post:
      tags:
      - "Data"
      summary: "Get data from multiple form structures for the given studies"
      description: "This service returns data for multiple form structure to study associations, without doing joins."
      operationId: "bulkStudySingleForm"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudyDataParam"
      responses:
        200:
          description: "Zip archive containing all data that was requested."
          content:
            application/zip:
              schema:
                type: string
                format: binary
        401:
          $ref: "#/components/responses/UnauthorizedError"        
      security:
      - Bearer: []
  /data/bulk/form/study:
    post:
      tags:
      - "Data"
      summary: "Get data from multiple form structures"
      description: "This service returns data for multiple form structure without doing joins, could also include study association if required."
      operationId: "bulkSingleForm"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimpleDataParam"
      responses:
        200:
          description: "Zip archive containing all data that was requested."
          content:
            application/zip:
              schema:
                type: string
                format: binary
        401:
          $ref: "#/components/responses/UnauthorizedError"        
      security:
      - Bearer: []
  /data/json:
    post:
      tags:
        - "Data"
      summary: "Get data from a single form or up two five forms joined by GUID"
      description: "This service returns data for a single form structure.  If multiple forms (up to five) are specified it will join the data by GUID."
      operationId: "getInstancedDataJson"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FormDataParam"
      responses:
        200:
          description: "Zip archive containing all data that was requested."
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/zip:
              schema:
                type: string
                format: binary
        401:
          $ref: "#/components/responses/UnauthorizedError"        
      security:
      - Bearer: []
  /data/csv:
    post:
      tags:
        - "Data"
      summary: "Get data from a single form or up two five forms joined by GUID"
      description: "This service returns data for a single form structure.  If multiple forms (up to five) are specified it will join the data by GUID."
      operationId: "getInstancedDataCsv"
      requestBody:
        content:
          application/csv:
            schema:
              $ref: "#/components/schemas/FormDataParam"
      responses:
        200:
          description: "Zip archive containing all data that was requested."
          content:
            application/zip:
              schema:
                type: string
                format: binary
        401:
          $ref: "#/components/responses/UnauthorizedError"        
      security:
      - Bearer: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: JWT is missing or invalid
    NotFoundError:
      description: The specified resource was not found
  schemas:
    Study:
      type: "object"
      properties:
        status:
          type: "string"
          enum: ["Private", "Public"]
        id:
          type: "string"
        title:
          type: "string"
        pi:
          type: "string"
        abstract:
          type: "string"
    FormStructure:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        shortName:
          type: "string"
        title:
          type: "string"
        version:
          type: "string"
    RepeatableGroup:
      type: "object"
      properties:
        uri:
          type: "string"
        name:
          type: "string"
        position:
          type: "integer"
          format: "int32"
        type:
          type: "string"
          enum: [ "Exactly", "Up To", "At Least" ]
        threshold:
          type: "integer"
          format: "int32"
        dataElements:
          type: "array"
          items:
            $ref: "#/components/schemas/DataElement"
    DataElement:
      type: "object"
      properties:
        id: 
          type: "integer"
          format: "int64"
        name:
          type: "string"
        position:
          type: "integer"
          format: "int32"
        title:
          type: "string"
        description:
          type: "string"
        dataType:
          type: "string"
          enum: ["Alphanumeric", "Numeric Values", "Date or Date & Time", "GUID", "File", "Thumbnail", "Biosample", "Tri-Planar"]
        permissibleValue:
          type: "array"
          items:
            type: "string"
        minimumValue:
          type: "number"
          format: "double"
        maximumValue:
          type: "number"
          format: "double"
        inputRestriction:
          type: "string"
          enum: ["Free-Form Entry", "Single Pre-Defined Value Selected", "Multiple Pre-Defined Values Selected"]
        requiredType:
          type: "string"
          enum: ["Required", "Recommended", "Optional"]
    FormStudy:
      type: "object"
      properties:
        form:
          type: "string"
        studies:
          type: "array"
          items:
            $ref: "#/components/schemas/Study"
    StudyForm:
      type: "object"
      properties:
        studyId:
          type: "string"
        forms:
          type: "array"
          items:
            $ref: "#/components/schemas/FormStructure"
    BasicFormStudy:
      type: "object"
      properties:
        form:
          type: "string"
        studies:
          type: "array"
          items:
            type: "string"
    BasicStudyForm:
      type: "object"
      properties:
        study:
          type: "string"
        forms:
          type: "array"
          items:
            type: "string"
    Filter:
      type: "object"
      properties:
        precedenceStart:
          type: "string"
          enum: ["((", "("]
        precedenceEnd:
          type: "string"
          enum: ["))", ")"]
        form:
          type: "string"
        repeatableGroup:
          type: "string"
        dataElement:
          type: "string"
        negation:
          type: "boolean"
          default: false
        operator:
          $ref: "#/components/schemas/Operator"
        value:
          type: "array"
          items:
            type: "string"
        rangeStart:
          type: "string"
        rangeEnd:
          type: "string"
        mode:
          type: "string"
          enum: ["inclusive", "exact"]
          default: "inclusive"
      required: [operator, form, repeatableGroup, dataElement]
    FormDataParam:
      type: "object"
      properties:
        formStudy:
          minItems: 1
          maxItems: 5
          type: "array"
          items:
            $ref: "#/components/schemas/BasicFormStudy"
        filter:
          type: "array"
          items:
            $ref: "#/components/schemas/Filter"
        flattened:
          type: "boolean"
          default: false
      required: [formStudy]
    SimpleDataParam:
      type: "object"
      properties:
        formStudies:
          minItems: 1
          type: "array"
          items:
            $ref: "#/components/schemas/BasicFormStudy"
        flattened:
          type: "boolean"
          default: false
        outputFormat:
          type: "string"
          enum: ["csv", "json"]
          default: "csv"
      required: [formStudies]
    StudyDataParam:
      type: "object"
      properties:
        studyForms:
          minItems: 1
          type: "array"
          items:
            $ref: "#/components/schemas/BasicStudyForm"
        flattened:
          type: "boolean"
          default: false
        outputFormat:
          type: "string"
          enum: ["csv", "json"]
          default: "csv"
      required: [studyForms]
    Operator:
      type: "string"
      default: "AND"
      enum: ["AND", "OR"]
security:
  - bearerAuth: []