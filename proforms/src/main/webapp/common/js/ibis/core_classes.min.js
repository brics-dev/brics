/**
 * Contains all core classes in use by the formbuilder and other backbone-based
 * applications within the IBIS/ProFoRMS/BRICS systems.
 * 
 * Contents:
 * BaseModel
 * Log
 * EventBus
 * TemplateManager
 * Validation
 * BaseView
 */

// BaseModel
var BaseModel=Backbone.Model.extend({save:function(){},sync:function(){},set:function(e,t,n){var r;if(e==null)return this;if(typeof e==="object"){r=e;n=t}else{(r={})[e]=t}n||(n={});var i;for(i in r){var s=r[i];if(typeof s==="string"){r[i]=$.trim(s)}}Backbone.Model.prototype.set.call(this,r,n);return this}})

// Log
var Log={developer:{consoleExists:window.console&&window.console.log,error:function(e){if(this.consoleExists){console.error(e)}},warning:function(e){if(this.consoleExists){console.warning(e)}},info:function(e){if(this.consoleExists){console.log(e)}},success:function(e){if(this.consoleExists){console.log(e)}},message:function(e){if(this.consoleExists){alert(e)}}},user:{error:function(e){this.message(e,"error")},warning:function(e){this.message(e,"warning")},info:function(e){this.message(e,"info")},success:function(e){this.message(e,"sucess")},message:function(e,t){if($.ibisMessaging){$.ibisMessaging("dialog",t,e)}else{alert(t+": "+e)}}}}

// EventBus
var EventBus={};_.extend(EventBus,Backbone.Events);

// TemplateManager
var TemplateManager={templates:{},addTemplate:function(t,a){if(!_.isFunction(a))throw new Error("template "+t+" is invalid during registration");return this.templates[t]=a,a},getTemplate:function(t){var a=this.templates[t];if(void 0===a||null===a)try{a=this._retrieveTemplate(t)}catch(t){throw t}return a},initPartials:function(){$(".handlebarsPartial").each(function(){var t=$(this);Handlebars.registerPartial(t.attr("id"),t.html())})},initOnePartial:function(t){var a=$("#"+t);if(!(a.length>0))throw new Error("partial "+t+" not found");var e=a.html();if(""===e)throw new Error("partial "+t+" is empty");Handlebars.registerPartial(a.attr("id"),e)},initAsync:function(t){$('script[type="text/x-handlebars-template"]').each(function(){var a=$(this);$.ajax({url:a.attr("src"),success:function(e){TemplateManager.addTemplate(a.attr("id"),Handlebars.compile(e)),t()}})})},loadAsync:function(t,a){$("#"+t).each(function(){var t=$(this);$.ajax({url:t.attr("src"),success:function(e){var r=TemplateManager.addTemplate(t.attr("id"),Handlebars.compile(e));a(r)}})})},loadNewAsync:function(t,a,e){$("body").append('<script id="'+t+'" src="'+a+'"  type="text/x-handlebars-template"><\/script>'),TemplateManager.loadAsync(t,e)},_retrieveTemplate:function(t){var a=$("#"+t);if(a.length>0){var e=a.html();if(""!==e){var r=Handlebars.compile(e);return this.addTemplate(t,r),r}throw new Error("template "+t+" is empty")}throw new Error("template "+t+" not found")}};

// Validation
function ValidationRule(e){this.defaults={fieldName:"",match:/.+/igm,required:false,description:""};var t=$.extend({},this.defaults,e);var n=_.keys(t);for(var r=0;r<n.length;r++){this[n[r]]=t[n[r]]}if(typeof this.match==="undefined"){this.required=true}if(this.fieldName===""){throw new Error("the field name was undefined when initializing ValidationRule")}}var Validation={failedFields:[],errorMessage:"",validate:function(e,t){this.resetFailedFields();this.resetErrorMessage();for(var n=0;n<e.length;n++){var r=e[n];if(r.required&&!this.require(r,t)){this.failedFields.push({name:r.fieldName,description:r.description})}if(r.match){if(!this.match(r,t)){this.failedFields.push({name:r.fieldName,description:" "+r.description});this.errorMessage+="<br />"+r.description}}}return this.failedFields.length==0},require:function(e,t){var n=t.get(e.fieldName);if(n==null||n==""){return false}return true},match:function(e,t){if(typeof e.match==="function"){return e.match(t)}else{var n=t.get(e.fieldName);var r=n.match(e.match);if(r){return true}else{return false}}},resetFailedFields:function(){this.failedFields=[]},resetErrorMessage:function(){this.errorMessage="Some fields in this editor did not validate: "},getFailedFields:function(){return this.failedFields}}

// BaseView
var BaseView=Backbone.View.extend({template:function(){},_modelBinder:undefined,model:null,bindings:"",events:{},initialize:function(){this._modelBinder=new Backbone.ModelBinder;return this},render:function(e){var t=e||this.model;this.setModel(t)},setModel:function(e){try{this.model=e;this._bindToModel(e)}catch(t){throw new Error("There was an error during model binding")}},_bindToModel:function(e){if(_.isUndefined(this.bindings)||!_.isString(this.bindings)){this.bindings=""}this._modelBinder.bind(e,this.el,this.bindings,{changeTriggers:{"":"change",'textarea, [type="text"]':"keyup","[contenteditable]":"blur"}})},_unbindFromModel:function(){if(!_.isUndefined(this._modelBinder)){try{this._modelBinder.unbind()}catch(e){Log.developer.error("modelbinder.unbind() failed "+this)}}},assign:function(e,t){var n;if(_.isObject(e)){n=e}else{n={};n[e]=t}if(!n)return;_.each(n,function(e,t){e.setElement(this.$(t)).render()},this)},close:function(){this._unbindFromModel();this.unbind();this.stopListening();EventBus.stopListening(this);return this.el},destroy:function(){this.close();this.remove();return this}})